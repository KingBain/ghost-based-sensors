---
#001-Example-Pipeline.yaml
name: Ghost Based Sensors Example

on:
  workflow_dispatch:

jobs:
  fish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
    - name: Start Sysdig System Capture
      uses: KingBain/falco-actions/start@bpfprobe-confirm
      with:
        mode: analyze
        verbose: true

# BEGIN - Normal Pipeline Workload
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Count for 10 seconds
      run: |
        echo "Counting for 10 seconds…"
        for i in $(seq 1 10); do
          echo "  → $i"
          sleep 1
        done

# END - Normal Pipeline Workload
    - name: Snapshot Node.js Packages
      shell: bash
      run: |
        echo "Recording Node.js packages…" >&2
        if command -v npm &>/dev/null; then
          npm ls --json --depth=0 > node-packages.json
        else
          echo "npm not found, skipping Node snapshot" >&2
        fi
      
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46

    - name: Save changed‑files list
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        # Write each changed file on its own line
        printf "%s\n" ${ALL_CHANGED_FILES} > changed-files.txt    

    - name: Snapshot Python Packages
      shell: bash
      run: |
        echo "Recording Python packages…" >&2
        if command -v pip &>/dev/null; then
          pip list --format=json > python-packages.json
        else
          echo "pip not found, skipping Python snapshot" >&2
        fi
      
    - name: Upload Pipeline Manifests
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: package-manifests
        path: |
          node-packages.json
          python-packages.json
          changed-files.txt

    - name: Stop Sysdig System Capture
      uses: falcosecurity/falco-actions/stop@4a4ff48cca452b3b03f06073d1ae0ff564503fc9
      with:
        mode: analyze
  
  sauce:
    needs: fish 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
    - name: Analyze
      uses: KingBain/falco-actions/analyze@domain
      with:
        falco-version: '0.39.0'
      env:
        VT_API_KEY: ${{ secrets.VT_API_KEY }}
